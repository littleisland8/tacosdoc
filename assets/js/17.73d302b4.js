(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{331:function(t,a,s){"use strict";s.r(a);var e=s(15),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("p",[t._v("TACOS performs differentially ploidy analysis in order to find those with a statistically significant difference in the transition between phase 1 (control) and phase 2 (case).")]),t._v(" "),a("p",[t._v("To run TACOS you need a data.frame object with cell_name on the first column, the name (label) of the cluster on the second column and median ploidy of each amplicon of each cell in the other columns. This file could be obtained by "),a("a",{attrs:{href:"https://missionbio.github.io/mosaic/examples/analysis-walkthrough.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mosaic"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("cell_name")]),t._v(" "),a("th",[t._v("label")]),t._v(" "),a("th",[t._v("amplicon_1")]),t._v(" "),a("th",[t._v("amplicon_2")]),t._v(" "),a("th",[t._v("amplicon_3")]),t._v(" "),a("th",[t._v("amplicon_4")]),t._v(" "),a("th",[t._v("amplicon_n")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("AACAACCTAAAGCAGCAT-1-P1")]),t._v(" "),a("td",[t._v("WT")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2")])]),t._v(" "),a("tr",[a("td",[t._v("AACAACCTACACCTCAAC-1-P1")]),t._v(" "),a("td",[t._v("cluster_2")]),t._v(" "),a("td",[t._v("7.111584")]),t._v(" "),a("td",[t._v("1.2653305")]),t._v(" "),a("td",[t._v("2.5542889")]),t._v(" "),a("td",[t._v("1.328682")]),t._v(" "),a("td",[t._v("0.6647728")])]),t._v(" "),a("tr",[a("td",[t._v("AACAACTGGCCACAAGGT-1-P1")]),t._v(" "),a("td",[t._v("cluster_2")]),t._v(" "),a("td",[t._v("2.633361")]),t._v(" "),a("td",[t._v("0.3476699")]),t._v(" "),a("td",[t._v("1.9356978")]),t._v(" "),a("td",[t._v("2.686965")]),t._v(" "),a("td",[t._v("0.3287827")])]),t._v(" "),a("tr",[a("td",[t._v("AACAATGCATCCAGCTAT-1-P2")]),t._v(" "),a("td",[t._v("cluster_3")]),t._v(" "),a("td",[t._v("1.494538")]),t._v(" "),a("td",[t._v("2.3383582")]),t._v(" "),a("td",[t._v("4.1786981")]),t._v(" "),a("td",[t._v("2.286371")]),t._v(" "),a("td",[t._v("1.5406782")])]),t._v(" "),a("tr",[a("td",[t._v("AACAGCAGTATTGGTTCC-1-P2")]),t._v(" "),a("td",[t._v("cluster_3")]),t._v(" "),a("td",[t._v("3.407511")]),t._v(" "),a("td",[t._v("3.8793449")]),t._v(" "),a("td",[t._v("1.7101954")]),t._v(" "),a("td",[t._v("2.249478")]),t._v(" "),a("td",[t._v("5.2756396")])]),t._v(" "),a("tr",[a("td",[t._v("AACAGCAGTCCTGACCTC-1-P2")]),t._v(" "),a("td",[t._v("cluster_1")]),t._v(" "),a("td",[t._v("5.006996")]),t._v(" "),a("td",[t._v("0.4637173")]),t._v(" "),a("td",[t._v("0.3197284")]),t._v(" "),a("td",[t._v("1.168645")]),t._v(" "),a("td",[t._v("1.4187598")])])])]),t._v(" "),a("p",[t._v("In addition, you need a data.frame with each row represented by a cluster and the fraction of each cluster on the second and third column of the P1 and P2, respectively.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("cluster")]),t._v(" "),a("th",[t._v("freq_P1")]),t._v(" "),a("th",[t._v("freq_P2")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("WT")]),t._v(" "),a("td",[t._v("6.349206")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("cluster_2")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("50.49")])]),t._v(" "),a("tr",[a("td",[t._v("cluster_3")]),t._v(" "),a("td",[t._v("28.673835")]),t._v(" "),a("td",[t._v("27.895")])]),t._v(" "),a("tr",[a("td",[t._v("cluster_4")]),t._v(" "),a("td",[t._v("35.02304")]),t._v(" "),a("td",[t._v("21.615")])])])]),t._v(" "),a("p",[t._v("First of all you load the data.frame into R")]),t._v(" "),a("div",{staticClass:"language-R extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("library"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TACOS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Create output directory")]),t._v("\noutdir "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/path/to/outputdir"')]),t._v("\ncmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" paste"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mkdir"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outdir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsystem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\ndf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" fread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path/to/ploidy.table.csv"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sep"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfreqcluster "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" fread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path/to/freqcluster.table.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sep"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\t"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nclust "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" freqcluster"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("cluster\namplicon "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" colnames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("df"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nfreqcluster "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" RelevantClones"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("freqcluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nphase1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" freqcluster"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("cluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("which"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("freqcluster"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("phase "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"phase1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nphase2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" freqcluster"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("cluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("which"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("freqcluster"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("phase "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"phase2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v('The function RelevantClones() adds a tag relative to the specificity of the cluster. In other words, it evaluates the percentage of cells in each cluster and assigns the cluster to phase1 or phase2. For clusters that are present in percentage in both phase1 and phase2, RelevantClones() considers a percentage difference of 15 and then if the percentage difference between phase1 and phase2 is > 15 then the tag "phase1" will be added to the cluster otherwise if the percentage difference between phase1 and phase2 is < -15 then the tag "phase2" will be added to the cluster. If the ploidy difference is between -15 and 15 a tag "Not phase-specific clone" will be added and the cluster will be excluded from downstream analysis.')]),t._v(" "),a("p",[t._v("This is how appears the freqcluster data.frame after RelevantClones function:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("cluster")]),t._v(" "),a("th",[t._v("freq_P1")]),t._v(" "),a("th",[t._v("freq_P2")]),t._v(" "),a("th",[t._v("phase")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("WT")]),t._v(" "),a("td",[t._v("6.349206")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("phase1")])]),t._v(" "),a("tr",[a("td",[t._v("cluster_2")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("50.49")]),t._v(" "),a("td",[t._v("phase2")])]),t._v(" "),a("tr",[a("td",[t._v("cluster_3")]),t._v(" "),a("td",[t._v("28.673835")]),t._v(" "),a("td",[t._v("27.895")]),t._v(" "),a("td",[t._v("Not phase-specific clone")])]),t._v(" "),a("tr",[a("td",[t._v("cluster_4")]),t._v(" "),a("td",[t._v("35.02304")]),t._v(" "),a("td",[t._v("21.615")]),t._v(" "),a("td",[t._v("Not phase-specific clone")])])])]),t._v(" "),a("p",[t._v("The function MatrixGen() creates a matrix in which the amplicons are represented in each row and the median ploidy of those within each cluster in each column.")]),t._v(" "),a("div",{staticClass:"language-R extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("mat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" MatrixGen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataframe "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" df"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("clusters "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clust"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("amplicons "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amplicon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nrownames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" amplicon\ncolnames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" clust\n")])])]),a("p",[t._v("To assess overall similarity between cluster we use the R function dist to calculate the Euclidean distance between cluster.")]),t._v(" "),a("div",{staticClass:"language-R extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#cluster sample based on distance")]),t._v("\ncloneDist "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \ncloneDistMatrix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" as.matrix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cloneDist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncolors "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" colorRampPalette"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("brewer.pal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Blues"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ncloneheatmap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" pheatmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cloneDistMatrix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clustering_distance_rows "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cloneDist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                         clustering_distance_cols "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cloneDist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                         col"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("colors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Another way to visualize cluster-to-cluster distances is a principal components analysis (PCA). TACOS provides the function plotPCA() to performs PCA analysis and it returns 2 plot, one with a 2D PCA and the other with the proportion of variance explained by each PCs.")]),t._v(" "),a("div",{staticClass:"language-R extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("plotPCA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("phase1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("phase2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("The core function of this package is DiffPloidy() which performs differential ploidy analysis to find amplicons with a statistically significant altered ploidy in the transition from P1 to P2 considering the labelled clusters obtained by RelevantClones() function."),a("br"),t._v("\nThis function takes as input the data.frame obtained from Mosaic, the phase1 and phase2 clusters, the amplicons, and requires a statistical method to be used for statistical analysis. Currently TACOS allows identification of significantly altered ploidy using 3 methods: the t-test, Wilcoxon rak sum test and Kruskall Wallis. For the 3 methods it applies a Benjamini & Hochberg correction for multiple comparison.")]),t._v(" "),a("div",{staticClass:"language-R extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("DiffMat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" DiffPloidy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("df"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("phase1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("phase2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amplicons "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amplicon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("method"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wilcoxon"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("For example, if we use Wilcoxon Rank sum test, the output of DiffPloidy() looks like:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("amplicon")]),t._v(" "),a("th",[t._v("ploidy_p1")]),t._v(" "),a("th",[t._v("min_p1")]),t._v(" "),a("th",[t._v("max_p1")]),t._v(" "),a("th",[t._v("ploidy_p2")]),t._v(" "),a("th",[t._v("min_p1")]),t._v(" "),a("th",[t._v("max_p2")]),t._v(" "),a("th",[t._v("wilcoxon_pvalue")]),t._v(" "),a("th",[t._v("padj")]),t._v(" "),a("th",[t._v("clones")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("amplicon_1")]),t._v(" "),a("td",[t._v("1.96")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("2.91")]),t._v(" "),a("td",[t._v("6.61")]),t._v(" "),a("td",[t._v("0.19")]),t._v(" "),a("td",[t._v("28.78")]),t._v(" "),a("td",[t._v("3.64-e9")]),t._v(" "),a("td",[t._v("1.13e-8")]),t._v(" "),a("td",[t._v("WT-cluster_2")])]),t._v(" "),a("tr",[a("td",[t._v("amplicon_2")]),t._v(" "),a("td",[t._v("2.25")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("3.32")]),t._v(" "),a("td",[t._v("4.32")]),t._v(" "),a("td",[t._v("0.89")]),t._v(" "),a("td",[t._v("10.25")]),t._v(" "),a("td",[t._v("1.23-e6")]),t._v(" "),a("td",[t._v("5.68e-8")]),t._v(" "),a("td",[t._v("WT-cluster_2")])]),t._v(" "),a("tr",[a("td",[t._v("amplicon_3")]),t._v(" "),a("td",[t._v("2.08")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("6.74")]),t._v(" "),a("td",[t._v("1.3")]),t._v(" "),a("td",[t._v("0.00")]),t._v(" "),a("td",[t._v("3.25")]),t._v(" "),a("td",[t._v("8.64-e4")]),t._v(" "),a("td",[t._v("5.23e-3")]),t._v(" "),a("td",[t._v("WT-cluster_2")])])])]),t._v(" "),a("p",[t._v("The function plotAmplicon() creates a boxplot of the distribution of the ploidy of specific amplicon among specific clusters or not. If specific_clusters= FALSE, the function plot the ploidy distrubution among all the clusters, conversely it accepts the cluster label.")]),t._v(" "),a("div",{staticClass:"language-R extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("plotAmplicon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("df"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amplicon "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name_of_the_amplicon"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" specific_clusters "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("FALSE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jitter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("FALSE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);